# Benchmark latest commit of PR against upstream repo
# Performs the following actions:
#   Checkout hyperspy-bench / gh-pages
#   Upload config file to GH artifact
#   Checkout PR, download config
#   Install python, hyperspy and asv
#   Benchmark Rnm and PR
#   Comprae Rnm and PR

name: Benchmark PR vs Rnm

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
#on: workflow_dispatch
defaults:
  run:
    shell: bash -l {0}
    
on:
  pull_request:
    branches: [ master ] # Should become RELEASE_next_minor
    types: [opened, synchronize, reopened]
    paths: '**.py' # Only trigger when changing python files

jobs:
  Benchmark_Results: # Name of job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout hyperspy-bench/gh-pages
      uses: actions/checkout@v2
      with:
        repository: thomasaarholt/hyperspy-bench
        ref: gh-pages
        token: ${{ secrets.BENCHMARK_PAT }}

    - name: Upload configuration file
      uses: actions/upload-artifact@v2
      with:
        name: asv_conf_json
        path: asv.conf.json

    - name: Checkout hyperspy
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1
      with:
        activate-environment: test_env
        environment-file: conda_environment.yml
        python-version: "3.7"
    
    - name: Install HyperSpy and ASV
      run: |
        conda install pip
        pip install .
        pip install asv
    
    - name: Download ASV config
      uses: actions/download-artifact@v2
      with:
        name: asv_conf_json

    - name: Set ASV config
      run: |
        asv machine --machine generic_name --os test --arch test --cpu test --num_cpu 1 --ram '1GB' 

    - name: Run and Compare Benchmarks
      run: |
        # Get IDs of PR and branch commits
        BRANCH_COMMIT_ID=$(git rev-parse origin/master)
        echo $BRANCH_COMMIT_ID | tee -a commit_list.txt
        echo $GITHUB_SHA | tee -a commit_list.txt

        asv run HASHFILE:commit_list.txt -E existing
        asv compare $BRANCH_COMMIT_ID $HEAD_COMMIT_ID
