# Automatically benchmark commits to Rnm and update the 
# benchmark website. First generates results on various 
# platforms. When finished, it generates the html from linux.

# Performs the following actions:

#   JOB 1 (multi OS)
#   Checkout hyperspy-bench / gh-pages
#   Upload previous results and config file to GH artifact
#   Checkout RELEASE_next_minor
#   Install python, hyperspy and asv
#   Run latest commit
#   Upload new result to GH artifact
#   Checkout hyperspy-bench/gh-pages
#   Push results (overwriting old)

#   JOB 2 (linux only)
#   Same as above until Run
#   Publish and upload html to artifact
#   Checkout gh-pages
#   Push html

name: Bench Rnm-push to gh-pages OS

on:
  push:
    branches: [ master ] # Change to RELEASE_next_minor

defaults:
  run:
    shell: bash -l {0}
    
jobs:
  Benchmark_commit: # Name of job
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout hyperspy-bench/gh-pages
      uses: actions/checkout@v2
      with:
        repository: thomasaarholt/hyperspy-bench
        ref: gh-pages
        token: ${{ secrets.BENCHMARK_PAT }}

    - name: Ensure Results directory exists
      run: mkdir -p results

    - name: Upload old results
      uses: actions/upload-artifact@v2
      with:
        name: asv_old_results
        path: results

    - name: Upload configuration file
      uses: actions/upload-artifact@v2
      with:
        name: asv_conf_json
        path: asv.conf.json

    - name: Checkout hyperspy
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1
      with:
        activate-environment: test_env
        python-version: "3.8"

    - name: Install ASV
      run: |
        pip install asv
    
    - name: Download ASV config
      uses: actions/download-artifact@v2
      with:
        name: asv_conf_json

    - name: Set ASV config
      run: asv machine --machine ${{ matrix.os }}

    - name: Run Benchmarks
      run: asv run --machine ${{ matrix.os }}

    - name: Upload new results    
      uses: actions/upload-artifact@v2
      with:
        name: asv_new_results
        path: results

    - name: Checkout hyperspy-bench / gh-pages
      uses: actions/checkout@v2
      with:
        repository: thomasaarholt/hyperspy-bench
        ref: gh-pages
        token: ${{ secrets.BENCHMARK_PAT }}

    - name: Download new results
      uses: actions/download-artifact@v2
      with:
        name: asv_new_results
        path: new_results
      
    - name: Copy over and push new results
      run: |
        cp -pr new_results/* results/

        git config --global user.email "thomasaarholt@gmail.com"
        git config --global user.name "Thomas Aarholt"

        git add -u 
        git push

  Publish_Result: # Name of job
    needs: Benchmark_commit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout hyperspy-bench/gh-pages
      uses: actions/checkout@v2
      with:
        repository: thomasaarholt/hyperspy-bench
        ref: gh-pages
        token: ${{ secrets.BENCHMARK_PAT }}

    - name: Upload old results
      uses: actions/upload-artifact@v2
      with:
        name: asv_results
        path: results

    - name: Upload configuration file
      uses: actions/upload-artifact@v2
      with:
        name: asv_conf_json
        path: asv.conf.json

    - name: Checkout hyperspy
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Miniconda
      uses: goanpeca/setup-miniconda@v1
      with:
        activate-environment: test_env
        python-version: "3.8"

    - name: Install ASV
      run: |
        pip install asv
    
    - name: Download ASV config
      uses: actions/download-artifact@v2
      with:
        name: asv_conf_json

    - name: Set ASV config
      run: asv machine --machine publisher

    - name: Generate html
      run: asv publish

    - name: Upload html
      uses: actions/upload-artifact@v2
      with:
        name: asv_html
        path: html

    - name: Checkout hyperspy-bench / gh-pages
      uses: actions/checkout@v2
      with:
        repository: thomasaarholt/hyperspy-bench
        ref: gh-pages
        token: ${{ secrets.BENCHMARK_PAT }}

    - name: Download and overwrite html
      uses: actions/download-artifact@v2
      with:
        name: asv_html

    - name: Push changes to gh-pages
      run: |
        git config --global user.email "thomasaarholt@gmail.com"
        git config --global user.name "Thomas Aarholt"
        git add --all
        git commit -m "Added Benchmark Result"
        git push
